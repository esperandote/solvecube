
#encoding:utf-8

import cube

def checke(state,a,b,c):#check edge piece a in position b and orientation c
	if(state[b-1]==a and state[b+19]==c):
		return True
	else:
		return False

def checkc(state,a,b,c):#check corner piece a in position b and orientation c
	if(state[b+11]==a and state[b+31]==c):
		return True
	else:
		return False

def uppercase(a):
	if(a=='f'):return('F')
	if(a=='b'):return('B')
	if(a=='u'):return('U')
	if(a=='d'):return('D')
	if(a=='l'):return('L')
	if(a=='r'):return('R')
	return(a)

def solve(state):
	if(state==False):
		return '输入错误，请认真检查～'
	t=0
	solve=''

	#c1  12*2=24种情况(经检验确认无误)
	c1=[
		[1,0,'ul2'],
		[1,1,'Bl'],
		[2,0,'l2'],
		[2,1,'Lfd'],
		[3,0,'u2l2'],
		[3,1,'rFd'],
		[4,0,'Ul2'],
		[4,1,'fL'],
		[5,0,'l'],
		[5,1,'BD'],
		[6,0,'Rd2'],
		[6,1,'bD'],
		[7,0,'L'],
		[7,1,'fd'],
		[8,0,'rd2'],
		[8,1,'Fd'],
		[9,0,'D'],
		[9,1,'bl'],
		[10,0,''],
		[10,1,'lfd'],
		[11,0,'d2'],
		[11,1,'RFd'],
		[12,0,'d'],
		[12,1,'FL']
	]
	for i in c1:
		if(checke(state,10,i[0],i[1])):#还可优化
			cube.do(state,i[2])
			solve+=i[2]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查～'
	t=0

	#c2  11*2=22种情况(经检验确认无误)
	c2=[
		[1,0,'u2f2'],
		[1,1,'UrF'],
		[2,0,'uf2'],
		[2,1,'Lfl'],
		[3,0,'Uf2'],
		[3,1,'rF'],
		[4,0,'f2'],
		[4,1,'urF'],
		[5,0,'dlD'],
		[5,1,'d2Bd2'],
		[6,0,'DRd'],
		[6,1,'r2F'],
		[7,0,'dLD'],
		[7,1,'f'],
		[8,0,'Drd'],
		[8,1,'F'],
		[9,0,'Br2F'],
		[9,1,'b2UrF'],
		[11,0,'r2Uf2'],
		[11,1,'RF'],
		[12,0,''],
		[12,1,'f2urF'],
	]
	for i in c2:
		if(checke(state,12,i[0],i[1])):
			cube.do(state,i[2])
			solve+=i[2]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查～'
	t=0

	#c3  10*2=20种情况(经检验确认无误)
	c3=[
		[1,0,'Ur2'],
		[1,1,'bR'],
		[2,0,'u2r2'],
		[2,1,'UbR'],
		[3,0,'r2'],
		[3,1,'UFrf'],
		[4,0,'ur2'],
		[4,1,'Frf'],
		[5,0,'b2R'],
		[5,1,'DBd'],
		[6,0,'R'],
		[6,1,'Dbd'],
		[7,0,'d2Ld2'],
		[7,1,'dfD'],
		[8,0,'r'],
		[8,1,'dFD'],
		[9,0,'BDbd'],
		[9,1,'BR'],
		[11,0,''],
		[11,1,'rDbd'],
	]
	for i in c3:
		if(checke(state,11,i[0],i[1])):
			cube.do(state,i[2])
			solve+=i[2]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查～'
	t=0

	#c4  9*2=18种情况(经检验确认无误)
	c4=[
		[1,0,'b2'],
		[1,1,'URbr'],
		[2,0,'Ub2'],
		[2,1,'lBL'],
		[3,0,'ub2'],
		[3,1,'Rbr'],
		[4,0,'u2b2'],
		[4,1,'uRbr'],
		[5,0,'Dld'],
		[5,1,'B'],
		[6,0,'dRD'],
		[6,1,'b'],
		[7,0,'DLd'],
		[7,1,'d2fd2'],
		[8,0,'drD'],
		[8,1,'d2Fd2'],
		[9,0,''],
		[9,1,'BdRD'],
	]
	for i in c4:
		if(checke(state,9,i[0],i[1])):
			cube.do(state,i[2])
			solve+=i[2]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查～'
	t=0

	#f1  8*2*8*3=384种情况,棱块7,角块7
	f1=[
		[1,0,1,0,'LUluLu2l2UL'],#棱块位置,棱块朝向,角块位置,角块朝向
		[1,0,1,1,'lULuluL'],
		[1,0,1,2,'u2lUL'],#未完待续(差得远..)
		[1,0,2,0,'RUrURlu2L'],
		[1,0,2,1,'BubluL'],
		[1,0,2,2,'Ru2ru2luL'],
		[1,0,3,0,'bu2Bu2lUL'],
		[1,0,3,1,'fuFulUL'],
		[1,0,3,2,'luL'],
		[1,0,4,0,'buBu2lUL'],
		[1,0,4,1,'FufUluL'],
		[1,0,4,2,'ru2RlUL'],
		[1,0,5,0,'ULulu2lUL'],
		[1,0,5,1,'buBluL'],
		[1,0,5,2,'Lu2l2UL'],
		[1,0,6,0,'u2Bublu2L'],
		[1,0,6,1,'UBUblUL'],
		[1,0,6,2,'u2ru2RluL'],
		[1,0,7,0,'FufulUL'],
		[1,0,7,1,'uFUfu2lUL'],
		[1,0,7,2,'lu2Lu2luL'],
		[1,0,8,0,'uRurlUL'],
		[1,0,8,1,'RurUluL'],
		[1,0,8,2,'u2fUFlUL'],
		[1,1,1,0,'LulubUBlu2L'],
		[1,1,1,1,'bUBUFUf'],
		[1,1,1,2,'lu2LuFUf'],
		[1,1,2,0,'Bu2bUFUf'],
		[1,1,2,1,'Ruru2FUf'],
		[1,1,2,2,'Fu2f'],
		[1,1,3,0,'BUbFu2f'],
		[1,1,3,1,'fUf2Uf'],
		[1,1,3,2,'Lu2lUFuf'],
		[1,1,4,0,'Bu2bFu2f'],
		[1,1,4,1,'FUfu2Fuf'],
		[1,1,4,2,'UFUf'],
		[1,1,5,0,'u2bUBFuf'],
		[1,1,5,1,'ubFufB'],
		[1,1,5,2,'u2Lu2lUFUf'],
		[1,1,6,0,'urURFu2f'],
		[1,1,6,1,'BUbUFUf'],
		[1,1,6,2,'ruRFuf'],
		[1,1,7,0,'UlULUFuf'],
		[1,1,7,1,'lULFUf'],
		[1,1,7,2,'u2lu2LFu2f'],
		[1,1,8,0,'fUFu2Fuf'],
		[1,1,8,1,'Ufu2f2uf'],
		[1,1,8,2,'Ru2ruFUf'],
		[2,0,1,0,'LulruRlUL'],
		[2,0,1,1,'Bu2b2lu2LB'],
		[2,0,1,2,'LulUluL'],
		[2,0,2,0,'luLulUL'],
		[2,0,2,1,'bu2Blu2L'],
		[2,0,2,2,'Ruru2luL'],
		[2,0,3,0,'lu2LUluL'],
		[2,0,3,1,'ulUL'],
		[2,0,3,2,'fUFluL'],
		[2,0,4,0,'lu2LulUL'],
		[2,0,4,1,'UluL'],
		[2,0,4,2,'ruRlUL'],
		[2,0,5,0,'u2Lulu2lUL'],
		[2,0,5,1,'UbuBluL'],
		[2,0,5,2,'ULu2l2UL'],
		[2,0,6,0,'uBUbUluL'],
		[2,0,6,1,'u2Blu2Lb'],
		[2,0,6,2,'u2ruRuluL'],
		[2,0,7,0,'UFufulUL'],
		[2,0,7,1,'FUfu2lUL'],
		[2,0,7,2,'luLUluL'],
		[2,0,8,0,'RurlUL'],
		[2,0,8,1,'fu2FuluL'],
		[2,0,8,2,'uRUrulUL'],
		[2,1,1,0,'Lu2lu2FUf'],
		[2,1,1,1,'Fuf'],
		[2,1,1,2,'BubuFUf'],
		[2,1,2,0,'Lu2lFuf'],
		[2,1,2,1,'u2FUf'],
		[2,1,2,2,'RUruFuf'],
		[2,1,3,0,'lULRUrFu2f'],
		[2,1,3,1,'fu2f2Uf'],
		[2,1,3,2,'lULu2FUf'],
		[2,1,4,0,'LUlFuf'],
		[2,1,4,1,'Fu2fu2Fuf'],
		[2,1,4,2,'rURUFUf'],
		[2,1,5,0,'ubUBFuf'],
		[2,1,5,1,'bFufB'],
		[2,1,5,2,'LUlu2FUf'],
		[2,1,6,0,'rURFu2f'],
		[2,1,6,1,'Bu2bFUf'],
		[2,1,6,2,'UruRFuf'],
		[2,1,7,0,'u2lULUFuf'],
		[2,1,7,1,'uFUfuFUf'],
		[2,1,7,2,'uluLu2Fuf'],
		[2,1,8,0,'UfUFu2Fuf'],
		[2,1,8,1,'u2fu2f2uf'],
		[2,1,8,2,'URu2ruFUf'],
		[3,0,1,0,'ru2Rlu2L'],
		[3,0,1,1,'uluL'],
		[3,0,1,2,'luLu2lUL'],
		[3,0,2,0,'ru2RuluL'],
		[3,0,2,1,'lu2L'],
		[3,0,2,2,'bUBu2luL'],
		[3,0,3,0,'ruRlu2L'],
		[3,0,3,1,'fu2FulUL'],
		[3,0,3,2,'Lul2uL'],
		[3,0,4,0,'Ru2rfu2FulUL'],
		[3,0,4,1,'Fu2fUluL'],
		[3,0,4,2,'RuruluL'],
		[3,0,5,0,'Lulu2lUL'],
		[3,0,5,1,'ubuBluL'],
		[3,0,5,2,'uLu2l2UL'],
		[3,0,6,0,'UBublu2L'],
		[3,0,6,1,'BUblUL'],
		[3,0,6,2,'ruRuluL'],
		[3,0,7,0,'uFufulUL'],
		[3,0,7,1,'u2Fu2flu2L'],
		[3,0,7,2,'ulu2Lu2luL'],
		[3,0,8,0,'u2RurlUL'],
		[3,0,8,1,'UfuFu2luL'],
		[3,0,8,2,'URUrulUL'],
		[3,1,1,0,'RUru2Fuf'],
		[3,1,1,1,'Bu2bFuf'],
		[3,1,1,2,'RurFUf'],
		[3,1,2,0,'rURLUlUFuf'],
		[3,1,2,1,'u2fu2f2Uf'],
		[3,1,2,2,'rURFUf'],#经过修改
		[3,1,3,0,'Ru2ru2Fuf'],
		[3,1,3,1,'FUf'],
		[3,1,3,2,'LUlUFuf'],
		[3,1,4,0,'Ru2rFUf'],
		[3,1,4,1,'u2Fuf'],
		[3,1,4,2,'RurURu2ruFuf'],
		[3,1,5,0,'UbUBFuf'],
		[3,1,5,1,'u2bFufB'],
		[3,1,5,2,'u2LUlu2FUf'],
		[3,1,6,0,'u2rURFu2f'],
		[3,1,6,1,'uBUbUFUf'],
		[3,1,6,2,'uruRFuf'],
		[3,1,7,0,'lULUFuf'],
		[3,1,7,1,'UFUfuFUf'],
		[3,1,7,2,'UluLu2Fuf'],
		[3,1,8,0,'ufUFu2Fuf'],
		[3,1,8,1,'fu2f2uf'],
		[3,1,8,2,'RUrFUf'],
		[4,0,1,0,'fuFlUL'],
		[4,0,1,1,'BubuluL'],
		[4,0,1,2,'lu2Lu2lUL'],
		[4,0,2,0,'fu2FlUL'],
		[4,0,2,1,'buBlu2L'],
		[4,0,2,2,'u2luL'],
		[4,0,3,0,'FufUruRlUL'],
		[4,0,3,1,'Fufu2luL'],
		[4,0,3,2,'Lu2l2uL'],
		[4,0,4,0,'fu2Fu2luL'],
		[4,0,4,1,'rURUluL'],
		[4,0,4,2,'lUL'],
		[4,0,5,0,'uLulu2lUL'],
		[4,0,5,1,'u2buBluL'],
		[4,0,5,2,'u2Lu2l2UL'],
		[4,0,6,0,'Bublu2L'],
		[4,0,6,1,'uBUblUL'],
		[4,0,6,2,'ru2RluL'],
		[4,0,7,0,'u2FufulUL'],
		[4,0,7,1,'UFu2flu2L'],
		[4,0,7,2,'UluLUluL'],
		[4,0,8,0,'URurlUL'],
		[4,0,8,1,'fuFu2luL'],
		[4,0,8,2,'RUrulUL'],
		[4,1,1,0,'Fu2fUFuf'],
		[4,1,1,1,'BUbFuf'],
		[4,1,1,2,'uFUf'],
		[4,1,2,0,'FUfUFuf'],#changed
		[4,1,2,1,'u2fUf2Uf'],
		[4,1,2,2,'Ru2ruFuf'],
		[4,1,3,0,'Fu2fuFUf'],
		[4,1,3,1,'LulFUf'],
		[4,1,3,2,'UFuf'],
		[4,1,4,0,'fUFBUbFuf'],
		[4,1,4,1,'fUFuFUf'],
		[4,1,4,2,'ru2RUFUf'],
		[4,1,5,0,'bUBFuf'],
		[4,1,5,1,'UbuBUFuf'],
		[4,1,5,2,'ULUlu2FUf'],
		[4,1,6,0,'UrURFu2f'],
		[4,1,6,1,'u2BUbUFUf'],
		[4,1,6,2,'u2ruRFuf'],
		[4,1,7,0,'ulULUFuf'],
		[4,1,7,1,'FUfuFUf'],
		[4,1,7,2,'luLu2Fuf'],
		[4,1,8,0,'u2fUFu2Fuf'],
		[4,1,8,1,'ufu2f2uf'],
		[4,1,8,2,'uRUrFUf'],
		[5,0,1,0,'Lul2UL'],
		[5,0,1,1,'uLUl2uL'],
		[5,0,1,2,'Ubub2Fufb'],
		[5,0,2,0,'uLul2UL'],
		[5,0,2,1,'bub2Fufb'],
		[5,0,2,2,'u2LUl2uL'],
		[5,0,3,0,'ULul2UL'],
		[5,0,3,1,'u2bub2Fufb'],
		[5,0,3,2,'LUl2uL'],
		[5,0,4,0,'u2Lul2UL'],
		[5,0,4,1,'ULUl2uL'],
		[5,0,4,2,'ubub2Fufb'],
		[5,0,5,0,'Lul2u2Lu2lUL'],
		[5,0,5,1,'LuluLul2uL'],
		[5,0,5,2,'LulfuFlUL'],
		[5,0,6,0,'LulBublu2L'],
		[5,0,6,1,'Lu2lBUblUL'],
		[5,0,6,2,'buBUruRFuf'],
		[5,0,7,0,'l2u2l2u2l2'],
		[5,0,7,1,'LulUFu2flu2L'],
		[5,0,7,2,'bu2BluLu2Fuf'],
		[5,0,8,0,'LulURurlUL'],
		[5,0,8,1,'bUBfu2f2uf'],
		[5,0,8,2,'LulRUrulUL'],
		[5,1,1,0,'ubuBlu2LulUL'],
		[5,1,1,1,'uLulUFuf'],
		[5,1,1,2,'UbUBlu2L'],
		[5,1,2,0,'u2buBlu2LulUL'],
		[5,1,2,1,'bUBlu2L'],
		[5,1,2,2,'u2LulUFuf'],
		[5,1,3,0,'buBlu2LulUL'],
		[5,1,3,1,'u2bUBlu2L'],
		[5,1,3,2,'LulUFuf'],
		[5,1,4,0,'UbuBlu2LulUL'],
		[5,1,4,1,'ULulUFuf'],
		[5,1,4,2,'ubUBlu2L'],
		[5,1,5,0,'bu2BlUL'],
		[5,1,5,1,'LulBUbFuf'],
		[5,1,5,2,'LulFu2fUFuf'],
		[5,1,6,0,'LulUrURFu2f'],
		[5,1,6,1,'bUb2lu2Lb'],
		[5,1,6,2,'LUlruRFuf'],
		[5,1,7,0,'Lu2l2ULUFuf'],
		[5,1,7,1,'buBFUfu2lUL'],
		[5,1,7,2,'Lul2u2LFu2f'],
		[5,1,8,0,'LUlfUFu2Fuf'],
		[5,1,8,1,'Lu2lfu2f2uf'],
		[5,1,8,2,'bu2BRUrulUL'],
		[6,0,1,0,'ruRu2fu2FlUL'],
		[6,0,1,1,'BubFuf'],
		[6,0,1,2,'u2rURlUL'],
		[6,0,2,0,'uruRu2fu2FlUL'],
		[6,0,2,1,'UrURlUL'],
		[6,0,2,2,'uBubFuf'],
		[6,0,3,0,'UruRu2fu2FlUL'],
		[6,0,3,1,'urURlUL'],
		[6,0,3,2,'UBubFuf'],
		[6,0,4,0,'BUbRu2ru2Fuf'],
		[6,0,4,1,'u2BubFuf'],
		[6,0,4,2,'rURlUL'],
		[6,0,5,0,'ruRULulu2lUL'],
		[6,0,5,1,'Bub2FufB'],
		[6,0,5,2,'ruRLu2l2UL'],
		[6,0,6,0,'rUlULR'],
		[6,0,6,1,'rURUruRlUL'],
		[6,0,6,2,'rURfu2FlUL'],
		[6,0,7,0,'ruRFufulUL'],
		[6,0,7,1,'ru2RFUfu2lUL'],
		[6,0,7,2,'Bu2bluLu2Fuf'],
		[6,0,8,0,'ru2r2urlUL'],
		[6,0,8,1,'BUbfu2f2uf'],
		[6,0,8,2,'rUr2lULr'],
		[6,1,1,0,'Uru2RFuf'],
		[6,1,1,1,'BUbuluL'],
		[6,1,1,2,'u2ruRUFUf'],
		[6,1,2,0,'ru2RFuf'],
		[6,1,2,1,'UruRUFUf'],
		[6,1,2,2,'uBUbuluL'],
		[6,1,3,0,'u2ru2RFuf'],
		[6,1,3,1,'uruRUFUf'],
		[6,1,3,2,'UBUbuluL'],
		[6,1,4,0,'uru2RFuf'],
		[6,1,4,1,'u2BUbuluL'],
		[6,1,4,2,'ruRUFUf'],
		[6,1,5,0,'rURbUBFuf'],
		[6,1,5,1,'ru2RbFufB'],
		[6,1,5,2,'BUbuLu2l2UL'],
		[6,1,6,0,'rUr2u2rFu2f'],
		[6,1,6,1,'BubluLulUL'],
		[6,1,6,2,'rURFUfUFuf'],
		[6,1,7,0,'rlULUFufR'],
		[6,1,7,1,'BubFUfu2lUL'],
		[6,1,7,2,'rURluLu2Fuf'],
		[6,1,8,0,'ruRfUFu2Fuf'],
		[6,1,8,1,'rURufu2f2uf'],
		[6,1,8,2,'Bu2bRUrulUL'],
		[7,0,1,0,'luLfuFlUL'],
		[7,0,1,1,'u2Fufu2Fuf'],
		[7,0,1,2,'lULu2lUL'],
		[7,0,2,0,'FufRUru2Fuf'],
		[7,0,2,1,'ulULu2lUL'],
		[7,0,2,2,'UFufu2Fuf'],
		[7,0,3,0,'UluLfuFlUL'],
		[7,0,3,1,'UlULu2lUL'],
		[7,0,3,2,'uFufu2Fuf'],
		[7,0,4,0,'FUfLUlFuf'],
		[7,0,4,1,'Fufu2Fuf'],
		[7,0,4,2,'u2lULu2lUL'],
		[7,0,5,0,'lu2l2ulu2lUL'],
		[7,0,5,1,'FUfbFufB'],
		[7,0,5,2,'lUl2u2l2UL'],
		[7,0,6,0,'luLBublu2L'],
		[7,0,6,1,'lu2LBlu2Lb'],
		[7,0,6,2,'Fu2frFu2fR'],
		[7,0,7,0,''],
		[7,0,7,1,'FufRu2ru2Fuf'],
		[7,0,7,2,'FufLUlUFuf'],
		[7,0,8,0,'RFufu2rFuf'],
		[7,0,8,1,'Fuf2u2f2uf'],
		[7,0,8,2,'luRULr'],
		[7,1,1,0,'uFuflu2L'],
		[7,1,1,1,'u2FUfUluL'],
		[7,1,1,2,'luLuFUf'],
		[7,1,2,0,'u2Fuflu2L'],
		[7,1,2,1,'uluLuFUf'],
		[7,1,2,2,'UFUfUluL'],
		[7,1,3,0,'Fuflu2L'],
		[7,1,3,1,'UluLuFUf'],
		[7,1,3,2,'uFUfUluL'],
		[7,1,4,0,'UFuflu2L'],
		[7,1,4,1,'FUfUluL'],
		[7,1,4,2,'u2luLuFUf'],
		[7,1,5,0,'luLbUBFuf'],
		[7,1,5,1,'lULubFufB'],
		[7,1,5,2,'Fu2fLu2l2UL'],
		[7,1,6,0,'lULurURFu2f'],
		[7,1,6,1,'FufBlu2Lb'],
		[7,1,6,2,'lULruRFuf'],
		[7,1,7,0,'Fuf2u2FulUL'],
		[7,1,7,1,'lULfUf2Uf'],
		[7,1,7,2,'lULuLUlFuf'],
		[7,1,8,0,'lULfUFu2Fuf'],
		[7,1,8,1,'lu2Lfu2f2uf'],
		[7,1,8,2,'FufURlULr'],
		[8,0,1,0,'u2Rlu2Lr'],
		[8,0,1,1,'URUru2luL'],
		[8,0,1,2,'ufuf2Uf'],
		[8,0,2,0,'URlu2Lr'],
		[8,0,2,1,'u2fuf2Uf'],
		[8,0,2,2,'RUru2luL'],
		[8,0,3,0,'uRlu2Lr'],
		[8,0,3,1,'fuf2Uf'],
		[8,0,3,2,'u2RUru2luL'],
		[8,0,4,0,'Rlu2Lr'],
		[8,0,4,1,'uRUru2luL'],
		[8,0,4,2,'Ufuf2Uf'],
		[8,0,5,0,'fUFubUBFuf'],
		[8,0,5,1,'fUf2bufB'],
		[8,0,5,2,'RurLu2l2UL'],
		[8,0,6,0,'fUFrURFu2f'],
		[8,0,6,1,'RUruBlu2Lb'],
		[8,0,6,2,'fu2FrFu2fR'],
		[8,0,7,0,'f2u2f2u2f2'],
		[8,0,7,1,'Ru2rFu2flu2L'],
		[8,0,7,2,'fUFulu2LFu2f'],
		[8,0,8,0,'Rur2u2RlUL'],
		[8,0,8,1,'fUFLUlFuf'],
		[8,0,8,2,'Ruru2fuFlUL'],
		[8,1,1,0,'RuruLUlFuf'],
		[8,1,1,1,'URurFu2f'],
		[8,1,1,2,'ufUFulUL'],
		[8,1,2,0,'Ru2rLu2lFuf'],
		[8,1,2,1,'u2fUFulUL'],
		[8,1,2,2,'RurFu2f'],
		[8,1,3,0,'fuFruRlu2L'],
		[8,1,3,1,'fUFulUL'],
		[8,1,3,2,'u2RurFu2f'],
		[8,1,4,0,'RUruRUrFUf'],
		[8,1,4,1,'uRurFu2f'],
		[8,1,4,2,'UfUFulUL'],
		[8,1,5,0,'RUrbUBFuf'],
		[8,1,5,1,'Ru2rbFufB'],
		[8,1,5,2,'fu2FLu2l2UL'],
		[8,1,6,0,'Ru2r2URFu2f'],
		[8,1,6,1,'fuFBUblUL'],
		[8,1,6,2,'Rur2Fu2fR'],
		[8,1,7,0,'fu2f2ufulUL'],
		[8,1,7,1,'fUf2u2flu2L'],
		[8,1,7,2,'RUrlu2LFu2f'],
		[8,1,8,0,'Ru2rFuf'],
		[8,1,8,1,'RurFUfu2Fuf'],
		[8,1,8,2,'fUFruRlUL'],
	]
	for i in f1:
		if(checke(state,7,i[0],i[1]) and checkc(state,7,i[2],i[3])):
			cube.do(state,i[4])
			solve+='<BR />'
			solve+=i[4]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查hhh～'
	t=0

	#f2 7*2*7*3=294种情况,棱块5,角块5
	f2=[
		[1,0,1,0,'Lu2lUrUr2Lulr'],
		[1,0,1,1,'bUBu2LUl'],
		[1,0,1,2,'ufu2FULUl'],
		[1,0,2,0,'URu2rULUl'],
		[1,0,2,1,'RuruLUl'],
		[1,0,2,2,'Lul'],
		[1,0,3,0,'BUbLul'],
		[1,0,3,1,'fUFULUl'],
		[1,0,3,2,'Lu2lu2Lul'],
		[1,0,4,0,'Bu2bLul'],
		[1,0,4,1,'uRUrLul'],
		[1,0,4,2,'u2LUl'],
		[1,0,5,0,'u2bUBULul'],
		[1,0,5,1,'ubu2BLu2l'],
		[1,0,5,2,'uLUluLUl'],
		[1,0,6,0,'urURLul'],
		[1,0,6,1,'BUbu2LUl'],
		[1,0,6,2,'rLulR'],
		[1,0,8,0,'fUFLu2l'],
		[1,0,8,1,'UfLu2lF'],
		[1,0,8,2,'URUrULUl'],
		[1,1,1,0,'Uru2RbuB'],
		[1,1,1,1,'ufUFUbuB'],
		[1,1,1,2,'ubUB'],
		[1,1,2,0,'URu2rfu2FbUB'],
		[1,1,2,1,'URurbuB'],
		[1,1,2,2,'Ru2r2bu2BR'],
		[1,1,3,0,'Uru2Ru2bUB'],
		[1,1,3,1,'fuFbUB'],
		[1,1,3,2,'UbuB'],
		[1,1,4,0,'UruRu2bUB'],
		[1,1,4,1,'uRur2bu2BR'],
		[1,1,4,2,'ru2Rbu2B'],
		[1,1,5,0,'ULulubUB'],
		[1,1,5,1,'buBUbuB'],
		[1,1,5,2,'Lu2lbu2B'],
		[1,1,6,0,'u2Bubu2bUB'],
		[1,1,6,1,'UBu2b2UB'],
		[1,1,6,2,'UruRbuB'],
		[1,1,8,0,'uRurbu2B'],
		[1,1,8,1,'u2fuFubuB'],
		[1,1,8,2,'u2Rbu2Br'],
		[2,0,1,0,'Lu2luLUl'],
		[2,0,1,1,'ULul'],
		[2,0,1,2,'BubLUl'],
		[2,0,2,0,'Lu2lULul'],
		[2,0,2,1,'uLUl'],
		[2,0,2,2,'RUrLul'],
		[2,0,3,0,'fUFBUbLul'],
		[2,0,3,1,'fu2FULUl'],
		[2,0,3,2,'ufUFLUl'],
		[2,0,4,0,'LUlULul'],
		[2,0,4,1,'uRu2rLul'],
		[2,0,4,2,'rUr2Lulr'],
		[2,0,5,0,'ubUBULul'],
		[2,0,5,1,'bu2BLu2l'],
		[2,0,5,2,'LUluLUl'],
		[2,0,6,0,'rURLul'],
		[2,0,6,1,'UBUbu2LUl'],
		[2,0,6,2,'UrLulR'],
		[2,0,8,0,'UfUFLu2l'],
		[2,0,8,1,'u2fLu2lF'],
		[2,0,8,2,'u2RUrULUl'],
		[2,1,1,0,'LulruRbu2B'],
		[2,1,1,1,'Bu2b2uB'],
		[2,1,1,2,'Lulu2buB'],
		[2,1,2,0,'ufuFbu2B'],
		[2,1,2,1,'u2fu2FbUB'],
		[2,1,2,2,'RurubuB'],
		[2,1,3,0,'u2ru2RbuB'],
		[2,1,3,1,'bUB'],
		[2,1,3,2,'fUFUbuB'],
		[2,1,4,0,'ufu2Fbu2B'],
		[2,1,4,1,'u2buB'],
		[2,1,4,2,'ruRbu2B'],
		[2,1,5,0,'u2LulubUB'],
		[2,1,5,1,'UbuBUbuB'],
		[2,1,5,2,'ULu2lbu2B'],
		[2,1,6,0,'uBubu2bUB'],
		[2,1,6,1,'u2Bu2b2UB'],
		[2,1,6,2,'u2ruRbuB'],
		[2,1,8,0,'Rurbu2B'],
		[2,1,8,1,'ufuFubuB'],
		[2,1,8,2,'uRbu2Br'],
		[3,0,1,0,'RUrLu2l'],
		[3,0,1,1,'URu2rLul'],
		[3,0,1,2,'ufUFULUl'],
		[3,0,2,0,'rURLUlu2Lul'],
		[3,0,2,1,'Uru2r2Lul'],
		[3,0,2,2,'rURULUl'],
		[3,0,3,0,'Ru2rLu2l'],
		[3,0,3,1,'ULUl'],
		[3,0,3,2,'LUlu2Lul'],
		[3,0,4,0,'Ru2rULUl'],
		[3,0,4,1,'Lu2l'],
		[3,0,4,2,'uRuruLUl'],
		[3,0,5,0,'UbUBULul'],
		[3,0,5,1,'u2bu2BLu2l'],
		[3,0,5,2,'u2LUluLUl'],
		[3,0,6,0,'u2rURLul'],
		[3,0,6,1,'uBUbu2LUl'],
		[3,0,6,2,'urLulR'],
		[3,0,8,0,'ufUFLu2l'],
		[3,0,8,1,'fLu2lF'],
		[3,0,8,2,'RUrULUl'],
		[3,1,1,0,'ru2Ru2bUB'],
		[3,1,1,1,'buB'],
		[3,1,1,2,'ufuFbUB'],
		[3,1,2,0,'ru2RbuB'],
		[3,1,2,1,'u2bUB'],
		[3,1,2,2,'UrURu2buB'],
		[3,1,3,0,'ruRu2bUB'],
		[3,1,3,1,'fu2FbUB'],
		[3,1,3,2,'LulUbuB'],
		[3,1,4,0,'Ru2rfu2FbUB'],
		[3,1,4,1,'uRu2r2bu2BR'],
		[3,1,4,2,'RurbuB'],
		[3,1,5,0,'LulubUB'],
		[3,1,5,1,'ubuBUbuB'],
		[3,1,5,2,'uLu2lbu2B'],
		[3,1,6,0,'UBubu2bUB'],
		[3,1,6,1,'Bu2b2UB'],
		[3,1,6,2,'ruRbuB'],
		[3,1,8,0,'u2Rurbu2B'],
		[3,1,8,1,'UfuFubuB'],
		[3,1,8,2,'URbu2Br'],
		[4,0,1,0,'uRu2rLu2l'],
		[4,0,1,1,'URUrLul'],
		[4,0,1,2,'LUl'],
		[4,0,2,0,'ULUlULul'],
		[4,0,2,1,'UrURu2LUl'],
		[4,0,2,2,'Ru2rLul'],
		[4,0,3,0,'uRu2rULUl'],
		[4,0,3,1,'LulULUl'],
		[4,0,3,2,'u2Lul'],
		[4,0,4,0,'fu2FRu2rLul'],
		[4,0,4,1,'fUFLUl'],
		[4,0,4,2,'ru2Ru2LUl'],
		[4,0,5,0,'bUBULul'],
		[4,0,5,1,'Ubu2BLu2l'],
		[4,0,5,2,'ULUluLUl'],
		[4,0,6,0,'UrURLul'],
		[4,0,6,1,'u2BUbu2LUl'],
		[4,0,6,2,'u2rLulR'],
		[4,0,8,0,'u2fUFLu2l'],
		[4,0,8,1,'ufLu2lF'],
		[4,0,8,2,'uRUrULUl'],
		[4,1,1,0,'fuFbu2B'],
		[4,1,1,1,'Bub2uB'],
		[4,1,1,2,'ufu2FbUB'],
		[4,1,2,0,'fu2Fbu2B'],
		[4,1,2,1,'UruRbu2B'],
		[4,1,2,2,'ubuB'],
		[4,1,3,0,'uRu2rfu2FbUB'],
		[4,1,3,1,'uRurbuB'],
		[4,1,3,2,'Lu2lUbuB'],
		[4,1,4,0,'uru2RbuB'],
		[4,1,4,1,'rURu2buB'],
		[4,1,4,2,'bu2B'],
		[4,1,5,0,'uLulubUB'],
		[4,1,5,1,'u2buBUbuB'],
		[4,1,5,2,'u2Lu2lbu2B'],
		[4,1,6,0,'Bubu2bUB'],
		[4,1,6,1,'uBu2b2UB'],
		[4,1,6,2,'uruRbuB'],
		[4,1,8,0,'URurbu2B'],
		[4,1,8,1,'fuFubuB'],
		[4,1,8,2,'Rbu2Br'],
		[5,0,1,0,'ULUlBu2bLul'],
		[5,0,1,1,'uLulu2Lul'],
		[5,0,1,2,'UbUBu2bUB'],
		[5,0,2,0,'LUlBu2bLul'],
		[5,0,2,1,'bUBu2bUB'],
		[5,0,2,2,'u2Lulu2Lul'],
		[5,0,3,0,'LUlBUbLul'],
		[5,0,3,1,'u2bUBu2bUB'],
		[5,0,3,2,'Lulu2Lul'],
		[5,0,4,0,'LulULUlULul'],
		[5,0,4,1,'ULulu2Lul'],
		[5,0,4,2,'ubUBu2bUB'],
		[5,0,5,0,''],
		[5,0,5,1,'LulURUrLul'],
		[5,0,5,2,'Lulu2Bu2bLul'],
		[5,0,6,0,'LulUrURLul'],
		[5,0,6,1,'bUb2u2b2UB'],
		[5,0,6,2,'LUruRl'],
		[5,0,8,0,'LUlfUFLu2l'],
		[5,0,8,1,'Lu2lfLu2lF'],
		[5,0,8,2,'Lu2lRUrULUl'],
		[5,1,1,0,'Lulbu2B'],
		[5,1,1,1,'uLUlUbuB'],
		[5,1,1,2,'UbuBuLUl'],
		[5,1,2,0,'uLulbu2B'],
		[5,1,2,1,'buBuLUl'],
		[5,1,2,2,'u2LUlUbuB'],
		[5,1,3,0,'ULulbu2B'],
		[5,1,3,1,'u2buBuLUl'],
		[5,1,3,2,'LUlUbuB'],
		[5,1,4,0,'u2Lulbu2B'],
		[5,1,4,1,'LulubuB'],
		[5,1,4,2,'LruRlbu2B'],
		[5,1,5,0,'Lulufu2FbUB'],
		[5,1,5,1,'LulBub2uB'],
		[5,1,5,2,'LulfuFbu2B'],
		[5,1,6,0,'Bub2uBuLUl'],
		[5,1,6,1,'Lu2lBu2b2UB'],
		[5,1,6,2,'ru2LUlRUbuB'],
		[5,1,8,0,'RUrLUlUbuB'],
		[5,1,8,1,'bUBfLu2lF'],
		[5,1,8,2,'LulRbu2Br'],
		[6,0,1,0,'UrLu2lR'],
		[6,0,1,1,'BUb2uB'],
		[6,0,1,2,'u2ruRu2LUl'],
		[6,0,2,0,'rLu2lR'],
		[6,0,2,1,'UruRu2LUl'],
		[6,0,2,2,'uBUb2uB'],
		[6,0,3,0,'u2rLu2lR'],
		[6,0,3,1,'uruRu2LUl'],
		[6,0,3,2,'UBUb2uB'],
		[6,0,4,0,'urLu2lR'],
		[6,0,4,1,'u2BUb2uB'],
		[6,0,4,2,'ruRu2LUl'],
		[6,0,5,0,'rURbUBULul'],
		[6,0,5,1,'ru2Rbu2BLu2l'],
		[6,0,5,2,'rURLu2lu2LUl'],
		[6,0,6,0,'rUr2u2rLul'],
		[6,0,6,1,'rURUrURu2LUl'],
		[6,0,6,2,'rURULUlULul'],
		[6,0,8,0,'ruRfUFLu2l'],
		[6,0,8,1,'rURufLu2lF'],
		[6,0,8,2,'rur2u2rLUl'],
		[6,1,1,0,'ruRbu2BubUB'],
		[6,1,1,1,'BubULul'],
		[6,1,1,2,'u2rURbu2B'],
		[6,1,2,0,'UruRbuBubUB'],
		[6,1,2,1,'UrURbu2B'],
		[6,1,2,2,'uBubULul'],
		[6,1,3,0,'uruRbuBubUB'],
		[6,1,3,1,'urURbu2B'],
		[6,1,3,2,'LBu2blu2Lul'],
		[6,1,4,0,'ruRbuBubUB'],
		[6,1,4,1,'ru2Ru2buB'],
		[6,1,4,2,'rURbu2B'],
		[6,1,5,0,'rURuLulubUB'],
		[6,1,5,1,'Bub2u2BLu2l'],
		[6,1,5,2,'ruRLu2lbu2B'],
		[6,1,6,0,'ru2RbUB'],
		[6,1,6,1,'BubLu2lULul'],
		[6,1,6,2,'rURfu2Fbu2B'],
		[6,1,8,0,'ru2r2urbu2B'],
		[6,1,8,1,'BUbfLu2lF'],
		[6,1,8,2,'rUr2bu2Br'],
		[8,0,1,0,'fUFufuFbu2B'],
		[8,0,1,1,'URurLul'],
		[8,0,1,2,'ufUFbUB'],
		[8,0,2,0,'fuFru2Ru2bUB'],
		[8,0,2,1,'u2fUFbUB'],
		[8,0,2,2,'RurLul'],
		[8,0,3,0,'fuFruRu2bUB'],
		[8,0,3,1,'fUFbUB'],
		[8,0,3,2,'u2RurLul'],
		[8,0,4,0,'fLu2lUFbuB'],
		[8,0,4,1,'uRurLul'],
		[8,0,4,2,'UfUFbUB'],
		[8,0,5,0,'RUrbUBULul'],
		[8,0,5,1,'Ru2rbu2BLu2l'],
		[8,0,5,2,'fu2FLu2lbu2B'],
		[8,0,6,0,'Ru2r2URLul'],
		[8,0,6,1,'fuFBu2b2UB'],
		[8,0,6,2,'Rur2Lul'],
		[8,0,8,0,'RuLulr'],
		[8,0,8,1,'RuruRUrLul'],
		[8,0,8,2,'fUFruRbu2B'],
		[8,1,1,0,'u2bRuBr'],
		[8,1,1,1,'URUrubuB'],
		[8,1,1,2,'ufuFULUl'],
		[8,1,2,0,'UbRuBr'],
		[8,1,2,1,'u2fuFULUl'],
		[8,1,2,2,'RUrubuB'],
		[8,1,3,0,'ubRuBr'],
		[8,1,3,1,'fuFULUl'],
		[8,1,3,2,'u2RUrubuB'],
		[8,1,4,0,'bRuBr'],
		[8,1,4,1,'uRUrubuB'],
		[8,1,4,2,'UfuFULUl'],
		[8,1,5,0,'RUruLulubUB'],
		[8,1,5,1,'fUFbu2BLu2l'],
		[8,1,5,2,'RurLu2lbu2B'],
		[8,1,6,0,'fUFrURLul'],
		[8,1,6,1,'RUruBu2b2UB'],
		[8,1,6,2,'fu2FrLulR'],
		[8,1,8,0,'Rur2u2Rbu2B'],
		[8,1,8,1,'fUFLUlULul'],
		[8,1,8,2,'fUFrUr2Lulr']
	]
	for i in f2:
		if(checke(state,5,i[0],i[1]) and checkc(state,5,i[2],i[3])):
			cube.do(state,i[4])
			solve+='<BR />'
			solve+=i[4]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查hhh～'
	t=0

	#f3 6*2*6*3=216种情况
	f3=[
		[1,0,1,0,'Uru2RUruR'],
		[1,0,1,1,'ufUFu2ruR'],
		[1,0,1,2,'rUR'],
		[1,0,2,0,'BubfuFru2R'],
		[1,0,2,1,'ru2RfuFu2rUR'],
		[1,0,2,2,'Ru2r2uR'],
		[1,0,3,0,'Uru2RurUR'],
		[1,0,3,1,'fuFru2R'],
		[1,0,3,2,'u2ruR'],
		[1,0,4,0,'UruRurUR'],
		[1,0,4,1,'uRur2uR'],
		[1,0,4,2,'ru2Ru2rUR'],
		[1,0,6,0,'u2BuburUR'],
		[1,0,6,1,'UBu2bru2R'],
		[1,0,6,2,'UruRUruR'],
		[1,0,8,0,'uRuru2rUR'],
		[1,0,8,1,'RururuR'],
		[1,0,8,2,'u2Ru2r2UR'],
		[1,1,1,0,'UrURu2RUrUBub'],
		[1,1,1,1,'UrURu2BUb'],
		[1,1,1,2,'ufu2Fu2BUb'],
		[1,1,2,0,'Bu2buBUb'],
		[1,1,2,1,'RurBUb'],
		[1,1,2,2,'UBub'],
		[1,1,3,0,'URUrBub'],
		[1,1,3,1,'fUFu2BUb'],
		[1,1,3,2,'u2Ru2rUBub'],
		[1,1,4,0,'URu2rBub'],
		[1,1,4,1,'uRUrUBub'],
		[1,1,4,2,'uBUb'],
		[1,1,6,0,'urURUBub'],
		[1,1,6,1,'BUbuBUb'],
		[1,1,6,2,'ru2RBu2b'],
		[1,1,8,0,'fUFBub'],
		[1,1,8,1,'UfBubF'],
		[1,1,8,2,'Ru2rUBUb'],
		[2,0,1,0,'UBubfuFru2R'],
		[2,0,1,1,'URu2r2uR'],
		[2,0,1,2,'u2RurUruR'],
		[2,0,2,0,'u2ruRurUR'],
		[2,0,2,1,'Uru2Ru2rUR'],
		[2,0,2,2,'Rur2uR'],
		[2,0,3,0,'ufu2FruR'],
		[2,0,3,1,'ru2R'],
		[2,0,3,2,'fUFu2ruR'],
		[2,0,4,0,'ufu2Fu2rUR'],
		[2,0,4,1,'uruR'],
		[2,0,4,2,'ruRu2rUR'],
		[2,0,6,0,'uBuburUR'],
		[2,0,6,1,'u2Bu2bru2R'],
		[2,0,6,2,'uru2Ru2ruR'],
		[2,0,8,0,'Ruru2rUR'],
		[2,0,8,1,'fu2FUruR'],
		[2,0,8,2,'uRUr2u2R'],
		[2,1,1,0,'UBu2buBUb'],
		[2,1,1,1,'u2Bub'],
		[2,1,1,2,'URurBUb'],
		[2,1,2,0,'u2Ru2rBub'],
		[2,1,2,1,'BUb'],
		[2,1,2,2,'RUrUBub'],
		[2,1,3,0,'ufuFufBubF'],
		[2,1,3,1,'fu2Fu2BUb'],
		[2,1,3,2,'ufUFUBUb'],
		[2,1,4,0,'u2RUrBub'],
		[2,1,4,1,'uRu2rUBub'],
		[2,1,4,2,'rURuBUb'],
		[2,1,6,0,'rURUBub'],
		[2,1,6,1,'Bu2bu2BUb'],
		[2,1,6,2,'Uru2RBu2b'],
		[2,1,8,0,'UfUFBub'],
		[2,1,8,1,'u2fBubF'],
		[2,1,8,2,'u2RUru2BUb'],
		[3,0,1,0,'ru2RurUR'],
		[3,0,1,1,'UruR'],
		[3,0,1,2,'ufuFru2R'],
		[3,0,2,0,'ru2RUruR'],
		[3,0,2,1,'urUR'],
		[3,0,2,2,'UrURuruR'],
		[3,0,3,0,'ruRurUR'],
		[3,0,3,1,'fu2Fru2R'],
		[3,0,3,2,'u2Rur2uR'],
		[3,0,4,0,'RUrURu2r2UR'],
		[3,0,4,1,'uRu2r2uR'],
		[3,0,4,2,'RurUruR'],
		[3,0,6,0,'UBuburUR'],
		[3,0,6,1,'Bu2bru2R'],
		[3,0,6,2,'ruRUruR'],
		[3,0,8,0,'u2Ruru2rUR'],
		[3,0,8,1,'uRururuR'],
		[3,0,8,2,'URu2r2UR'],
		[3,1,1,0,'RUrBub'],
		[3,1,1,1,'URu2rUBub'],
		[3,1,1,2,'u2rURuBUb'],
		[3,1,2,0,'ruRuru2RBu2b'],
		[3,1,2,1,'Uru2RuBUb'],
		[3,1,2,2,'rURu2BUb'],
		[3,1,3,0,'Ru2rBub'],
		[3,1,3,1,'u2BUb'],
		[3,1,3,2,'u2RUrUBub'],
		[3,1,4,0,'Ru2ru2BUb'],
		[3,1,4,1,'Bub'],
		[3,1,4,2,'uRurBUb'],
		[3,1,6,0,'u2rURUBub'],
		[3,1,6,1,'u2Bu2bu2BUb'],
		[3,1,6,2,'uru2RBu2b'],
		[3,1,8,0,'ufUFBub'],
		[3,1,8,1,'fBubF'],
		[3,1,8,2,'RUru2BUb'],
		[4,0,1,0,'fuFu2rUR'],
		[4,0,1,1,'URur2uR'],
		[4,0,1,2,'ufu2Fru2R'],
		[4,0,2,0,'fu2Fu2rUR'],
		[4,0,2,1,'UruRu2rUR'],
		[4,0,2,2,'ruR'],
		[4,0,3,0,'uRUrURu2r2UR'],
		[4,0,3,1,'uRurUruR'],
		[4,0,3,2,'u2Ru2r2uR'],
		[4,0,4,0,'fu2FruR'],
		[4,0,4,1,'rURuruR'],
		[4,0,4,2,'u2rUR'],
		[4,0,6,0,'BuburUR'],
		[4,0,6,1,'uBu2bru2R'],
		[4,0,6,2,'ru2Ru2ruR'],
		[4,0,8,0,'URuru2rUR'],
		[4,0,8,1,'fuFruR'],
		[4,0,8,2,'Ru2r2UR'],
		[4,1,1,0,'uRu2rBub'],
		[4,1,1,1,'URUrUBub'],
		[4,1,1,2,'UBUb'],
		[4,1,2,0,'uRUrBub'],
		[4,1,2,1,'UrURuBUb'],
		[4,1,2,2,'Ru2rUBub'],
		[4,1,3,0,'uRu2ru2BUb'],
		[4,1,3,1,'u2RurBUb'],
		[4,1,3,2,'Bu2b'],
		[4,1,4,0,'fUFBUbu2Bub'],
		[4,1,4,1,'fUFUBUb'],
		[4,1,4,2,'ru2RuBUb'],
		[4,1,6,0,'UrURUBub'],
		[4,1,6,1,'UBu2bu2BUb'],
		[4,1,6,2,'u2ru2RBu2b'],
		[4,1,8,0,'u2fUFBub'],
		[4,1,8,1,'ufBubF'],
		[4,1,8,2,'u2Ru2rUBUb'],
		[6,0,1,0,'ruRUru2RurUR'],
		[6,0,1,1,'Bubu2Bub'],
		[6,0,1,2,'u2rURu2rUR'],
		[6,0,2,0,'UBUbRu2rBub'],
		[6,0,2,1,'UrURu2rUR'],
		[6,0,2,2,'uBubu2Bub'],
		[6,0,3,0,'rURfuFu2rUR'],
		[6,0,3,1,'urURu2rUR'],
		[6,0,3,2,'UBubu2Bub'],
		[6,0,4,0,'BUbRu2rBub'],
		[6,0,4,1,'u2Bubu2Bub'],
		[6,0,4,2,'rURu2rUR'],
		[6,0,6,0,''],
		[6,0,6,1,'rURUruRu2rUR'],
		[6,0,6,2,'rURfu2Fu2rUR'],
		[6,0,8,0,'ru2r2uru2rUR'],
		[6,0,8,1,'BUfubF'],
		[6,0,8,2,'rUr2u2r2UR'],
		[6,1,1,0,'UrURBu2b'],
		[6,1,1,1,'BUbUruR'],
		[6,1,1,2,'u2ruRuBUb'],
		[6,1,2,0,'rURBu2b'],
		[6,1,2,1,'UruRuBUb'],
		[6,1,2,2,'uBUbUruR'],
		[6,1,3,0,'u2rURBu2b'],
		[6,1,3,1,'uruRuBUb'],
		[6,1,3,2,'UBUbUruR'],
		[6,1,4,0,'urURBu2b'],
		[6,1,4,1,'u2BUbUruR'],
		[6,1,4,2,'ruRuBUb'],
		[6,1,6,0,'rUr2u2rUBub'],
		[6,1,6,1,'rURUrURuBUb'],
		[6,1,6,2,'rURuRUrBub'],
		[6,1,8,0,'ruRfUFBub'],
		[6,1,8,1,'rURufBubF'],
		[6,1,8,2,'rur2u2rUBUb'],
		[8,0,1,0,'u2Rur2UR'],
		[8,0,1,1,'URUr2uR'],
		[8,0,1,2,'ufuFu2BUb'],
		[8,0,2,0,'URur2UR'],
		[8,0,2,1,'u2fuFu2BUb'],
		[8,0,2,2,'RUr2uR'],
		[8,0,3,0,'uRur2UR'],
		[8,0,3,1,'fuFu2BUb'],
		[8,0,3,2,'u2RUr2uR'],
		[8,0,4,0,'Rur2UR'],
		[8,0,4,1,'uRUr2uR'],
		[8,0,4,2,'UfuFu2BUb'],
		[8,0,6,0,'fUFrURUBub'],
		[8,0,6,1,'ru2RuRur2UR'],
		[8,0,6,2,'rURURur2UR'],
		[8,0,8,0,'Rur2u2Ru2rUR'],
		[8,0,8,1,'RuruRur2uR'],
		[8,0,8,2,'RurUruRurUR'],
		[8,1,1,0,'RurBUbUBub'],
		[8,1,1,1,'URurUBub'],
		[8,1,1,2,'ufUFru2R'],
		[8,1,2,0,'RUruRUrBub'],
		[8,1,2,1,'u2fUFru2R'],
		[8,1,2,2,'RurUBub'],
		[8,1,3,0,'fuFruRurUR'],
		[8,1,3,1,'fUFru2R'],
		[8,1,3,2,'u2RurUBub'],
		[8,1,4,0,'UfuFruRurUR'],
		[8,1,4,1,'uRurUBub'],
		[8,1,4,2,'UfUFru2R'],
		[8,1,6,0,'ru2RfUFru2R'],
		[8,1,6,1,'fuFBu2bru2R'],
		[8,1,6,2,'Rur2u2RBu2b'],
		[8,1,8,0,'RuruBUb'],
		[8,1,8,1,'RuruRUrUBub'],
		[8,1,8,2,'RurURu2rBub'],
	]
	for i in f3:
		if(checke(state,6,i[0],i[1]) and checkc(state,6,i[2],i[3])):
			cube.do(state,i[4])
			solve+='<BR />'
			solve+=i[4]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查hhh～'
	t=0

	#f4 5*2*5*3=150种情况
	f4=[
		[1,0,1,0,'ufu2FRu2rURur'],
		[1,0,1,1,'u2fUFu2RUr'],
		[1,0,1,2,'ufu2FuRUr'],
		[1,0,2,0,'Ru2ruRUrURur'],
		[1,0,2,1,'RurURUr'],
		[1,0,2,2,'u2Rur'],
		[1,0,3,0,'URUrURur'],
		[1,0,3,1,'fUFuRUr'],
		[1,0,3,2,'u2Ru2ru2Rur'],
		[1,0,4,0,'URu2rURur'],
		[1,0,4,1,'uRUru2Rur'],
		[1,0,4,2,'RUr'],
		[1,0,8,0,'fUFURur'],
		[1,0,8,1,'Ufu2FRu2r'],
		[1,0,8,2,'Ru2ru2RUr'],
		[1,1,1,0,'u2fu2FUfuF'],
		[1,1,1,1,'ufUFufuF'],
		[1,1,1,2,'fu2F'],
		[1,1,2,0,'Ru2rfu2FufUF'],
		[1,1,2,1,'URuru2fuF'],
		[1,1,2,2,'Ru2rUfuF'],
		[1,1,3,0,'u2fu2FufUF'],
		[1,1,3,1,'fuFu2fUF'],
		[1,1,3,2,'ufuF'],
		[1,1,4,0,'u2fuFufUF'],
		[1,1,4,1,'uRurUfuF'],
		[1,1,4,2,'Ufu2Fu2fUF'],
		[1,1,8,0,'uRurufUF'],
		[1,1,8,1,'ufu2Fu2fuF'],
		[1,1,8,2,'u2Ru2rfu2F'],
		[2,0,1,0,'u2Ru2ruRUr'],
		[2,0,1,1,'Ru2r'],
		[2,0,1,2,'URurURUr'],
		[2,0,2,0,'u2Ru2rURur'],
		[2,0,2,1,'URUr'],
		[2,0,2,2,'RUru2Rur'],
		[2,0,3,0,'fu2FRu2rURur'],
		[2,0,3,1,'fu2FuRUr'],
		[2,0,3,2,'ufUFu2RUr'],
		[2,0,4,0,'u2RUrURur'],
		[2,0,4,1,'uRu2ru2Rur'],
		[2,0,4,2,'UfUFuRUr'],
		[2,0,8,0,'UfUFURur'],
		[2,0,8,1,'u2fu2FRu2r'],
		[2,0,8,2,'RUrfUFuRUr'],
		[2,1,1,0,'URu2rfu2FufUF'],
		[2,1,1,1,'URu2rUfuF'],
		[2,1,1,2,'u2Ruru2fuF'],
		[2,1,2,0,'ufuFufUF'],
		[2,1,2,1,'u2fu2Fu2fUF'],
		[2,1,2,2,'RurUfuF'],
		[2,1,3,0,'ufu2FUfuF'],
		[2,1,3,1,'u2fUF'],
		[2,1,3,2,'fUFufuF'],
		[2,1,4,0,'ufu2FufUF'],
		[2,1,4,1,'fuF'],
		[2,1,4,2,'UfuFu2fUF'],
		[2,1,8,0,'RurufUF'],
		[2,1,8,1,'fu2Fu2fuF'],
		[2,1,8,2,'uRu2rfu2F'],
		[3,0,1,0,'RUrURur'],
		[3,0,1,1,'URu2ru2Rur'],
		[3,0,1,2,'RuruRUr'],
		[3,0,2,0,'UfUFURUru2Rur'],
		[3,0,2,1,'u2fu2FuRUr'],
		[3,0,2,2,'UfUFu2RUr'],
		[3,0,3,0,'Ru2rURur'],
		[3,0,3,1,'uRUr'],
		[3,0,3,2,'u2RUru2Rur'],
		[3,0,4,0,'Ru2ruRUr'],
		[3,0,4,1,'URur'],
		[3,0,4,2,'uRurURUr'],
		[3,0,8,0,'ufUFURur'],
		[3,0,8,1,'fu2FRu2r'],
		[3,0,8,2,'RUruRUr'],
		[3,1,1,0,'Ufu2FufUF'],
		[3,1,1,1,'u2fuF'],
		[3,1,1,2,'ufuFu2fUF'],
		[3,1,2,0,'Ufu2FUfuF'],
		[3,1,2,1,'fUF'],
		[3,1,2,2,'u2fUFufuF'],
		[3,1,3,0,'UfuFufUF'],
		[3,1,3,1,'fu2Fu2fUF'],
		[3,1,3,2,'u2RurUfuF'],
		[3,1,4,0,'RurufuFu2fUF'],
		[3,1,4,1,'uRu2rUfuF'],
		[3,1,4,2,'Ruru2fuF'],
		[3,1,8,0,'u2RurufUF'],
		[3,1,8,1,'RUrUfuFufUF'],
		[3,1,8,2,'URu2rfu2F'],
		[4,0,1,0,'uRu2rURur'],
		[4,0,1,1,'URUru2Rur'],
		[4,0,1,2,'u2RUr'],
		[4,0,2,0,'uRUrURur'],
		[4,0,2,1,'u2fUFuRUr'],
		[4,0,2,2,'Ru2ru2Rur'],
		[4,0,3,0,'uRu2ruRUr'],
		[4,0,3,1,'u2RurURUr'],
		[4,0,3,2,'Rur'],
		[4,0,4,0,'fUFURUru2Rur'],
		[4,0,4,1,'fUFu2RUr'],
		[4,0,4,2,'Ufu2FuRUr'],
		[4,0,8,0,'u2fUFURur'],
		[4,0,8,1,'ufu2FRu2r'],
		[4,0,8,2,'URUrfUFuRUr'],
		[4,1,1,0,'fuFufUF'],
		[4,1,1,1,'URurUfuF'],
		[4,1,1,2,'ufu2Fu2fUF'],
		[4,1,2,0,'fu2FufUF'],
		[4,1,2,1,'u2fuFu2fUF'],
		[4,1,2,2,'UfuF'],
		[4,1,3,0,'uRurufuFu2fUF'],
		[4,1,3,1,'uRuru2fuF'],
		[4,1,3,2,'u2Ru2rUfuF'],
		[4,1,4,0,'fu2FUfuF'],
		[4,1,4,1,'UfUFufuF'],
		[4,1,4,2,'ufUF'],
		[4,1,8,0,'URurufUF'],
		[4,1,8,1,'fuFUfuF'],
		[4,1,8,2,'RUru2fUF'],
		[8,0,1,0,'RurURUrURur'],
		[8,0,1,1,'URuru2Rur'],
		[8,0,1,2,'ufUFu2fUF'],
		[8,0,2,0,'RUruRUrURur'],
		[8,0,2,1,'u2fUFu2fUF'],
		[8,0,2,2,'Ruru2Rur'],
		[8,0,3,0,'RUruRu2rURur'],
		[8,0,3,1,'fUFu2fUF'],
		[8,0,3,2,'u2Ruru2Rur'],
		[8,0,4,0,'URUruRu2rURur'],
		[8,0,4,1,'uRuru2Rur'],
		[8,0,4,2,'UfUFu2fUF'],
		[8,0,8,0,''],
		[8,0,8,1,'fUFufu2FufUF'],
		[8,0,8,2,'RurURu2rURur'],
		[8,1,1,0,'u2Rurfu2F'],
		[8,1,1,1,'URUrUfuF'],
		[8,1,1,2,'ufuFuRUr'],
		[8,1,2,0,'URurfu2F'],
		[8,1,2,1,'u2fuFuRUr'],
		[8,1,2,2,'RUrUfuF'],
		[8,1,3,0,'uRurfu2F'],
		[8,1,3,1,'fuFuRUr'],
		[8,1,3,2,'u2RUrUfuF'],
		[8,1,4,0,'Rurfu2F'],
		[8,1,4,1,'uRUrUfuF'],
		[8,1,4,2,'UfuFuRUr'],
		[8,1,8,0,'RurUfu2Fu2fUF'],
		[8,1,8,1,'fUFu2RUrURur'],
		[8,1,8,2,'Ruru2fuFufUF']
	]
	for i in f4:
		if(checke(state,8,i[0],i[1]) and checkc(state,8,i[2],i[3])):
			cube.do(state,i[4])
			solve+='<BR />'
			solve+=i[4]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查hhh～'
	t=0

	#o 我们只需考虑:棱块1,2,3朝向,角块1,2,3朝向,共2*2*2*3*3*3=216种情况
	o=[
		[0,0,0,0,0,0,''],
		[0,0,0,0,0,1,'u2r2dRu2rDRu2R'],
		[0,0,0,0,0,2,'ULFrflFRf'],
		[0,0,0,0,1,0,'u2LFrflFRf'],
		[0,0,0,0,1,1,'rULuRUl'],
		[0,0,0,0,1,2,'ufLFrflFR'],
		[0,0,0,0,2,0,'ur2dRu2rDRu2R'],
		[0,0,0,0,2,1,'UfLFrflFR'],
		[0,0,0,0,2,2,'uRulUruL'],
		[0,0,0,1,0,0,'u2fLFrflFR'],
		[0,0,0,1,0,1,'LFrflFRf'],
		[0,0,0,1,0,2,'LurUluR'],
		[0,0,0,1,1,0,'r2dRu2rDRu2R'],
		[0,0,0,1,1,1,'Ru2ruRUruRur'],
		[0,0,0,1,1,2,'uRu2r2ur2ur2u2R'],
		[0,0,0,1,2,0,'RulUruL'],
		[0,0,0,1,2,1,'u2Ru2r2ur2ur2u2R'],
		[0,0,0,1,2,2,'ru2RUrUR'],
		[0,0,0,2,0,0,'fLFrflFR'],
		[0,0,0,2,0,1,'UlURuLUr'],
		[0,0,0,2,0,2,'Ur2dRu2rDRu2R'],
		[0,0,0,2,1,0,'ulURuLUr'],
		[0,0,0,2,1,1,'lURuLUr'],
		[0,0,0,2,1,2,'Ru2r2ur2ur2u2R'],
		[0,0,0,2,2,0,'uLFrflFRf'],
		[0,0,0,2,2,1,'URu2r2ur2ur2u2R'],
		[0,0,0,2,2,2,'URu2ruRUruRur'],
		[0,0,1,0,0,0,'LFrflRURur'],
		[0,0,1,0,0,1,'uburURB'],
		[0,0,1,0,0,2,'UruFURurfR'],
		[0,0,1,0,1,0,'u2RUburURBr'],
		[0,0,1,0,1,1,'ULf2rfRfl'],
		[0,0,1,0,1,2,'u2Ru2r2FRfRu2r'],
		[0,0,1,0,2,0,'u2BULulb'],
		[0,0,1,0,2,1,'FRuruRUrf'],
		[0,0,1,0,2,2,'u2lb2RBrBL'],
		[0,0,1,1,0,0,'RUrURururFRf'],
		[0,0,1,1,0,1,'ULf2rfRflru2RUrUR'],
		[0,0,1,1,0,2,'LFrFrDRdRf2l'],
		[0,0,1,1,1,0,'RUrURu2rFRUruf'],
		[0,0,1,1,1,1,'ULFrFRfrFRf2l'],
		[0,0,1,1,1,2,'UfluLUluLUF'],
		[0,0,1,1,2,0,'LFrFRf2l'],
		[0,0,1,1,2,1,'rFr2br2fr2Br'],
		[0,0,1,1,2,2,'uRUrUrFRfRu2r'],
		[0,0,1,2,0,0,'uruRurURURbrB'],
		[0,0,1,2,0,1,'ulbRbrb2L'],
		[0,0,1,2,0,2,'uruRuru2RFRUruf'],
		[0,0,1,2,1,0,'u2FRUrufUFRUruf'],
		[0,0,1,2,1,1,'RUrurFr2Uruf'],
		[0,0,1,2,1,2,'FRUruRUruf'],
		[0,0,1,2,2,0,'u2lb2RBrBLRu2ruRur'],
		[0,0,1,2,2,1,'uRbr2Fr2Br2fR'],
		[0,0,1,2,2,2,'ulb2RBrbRBrBL'],
		[0,1,0,0,0,0,'uLFrflRURur'],
		[0,1,0,0,0,1,'UBULulb'],
		[0,1,0,0,0,2,'URUburURBr'],
		[0,1,0,0,1,0,'Ulb2RBrBLRu2ruRur'],
		[0,1,0,0,1,1,'UFRUrufUFRUruf'],
		[0,1,0,0,1,2,'u2ruRurURURbrB'],
		[0,1,0,0,2,0,'uRUrURu2rFRUruf'],
		[0,1,0,0,2,1,'uRUrURururFRf'],
		[0,1,0,0,2,2,'uLFrFRf2l'],
		[0,1,0,1,0,0,'URu2r2FRfRu2r'],
		[0,1,0,1,0,1,'ruFURurfR'],
		[0,1,0,1,0,2,'Ulb2RBrBL'],
		[0,1,0,1,1,0,'u2ruRuru2RFRUruf'],
		[0,1,0,1,1,1,'u2lb2RBrbRBrBL'],
		[0,1,0,1,1,2,'uFRUruRUruf'],
		[0,1,0,1,2,0,'u2RUrUrFRfRu2r'],
		[0,1,0,1,2,1,'fluLUluLUF'],
		[0,1,0,1,2,2,'uLFrFrDRdRf2l'],
		[0,1,0,2,0,0,'uFRuruRUrf'],
		[0,1,0,2,0,1,'Lf2rfRfl'],
		[0,1,0,2,0,2,'u2burURB'],
		[0,1,0,2,1,0,'uRUrurFr2Uruf'],
		[0,1,0,2,1,1,'u2lbRbrb2L'],
		[0,1,0,2,1,2,'u2Rbr2Fr2Br2fR'],
		[0,1,0,2,2,0,'Lf2rfRflru2RUrUR'],
		[0,1,0,2,2,1,'urFr2br2fr2Br'],
		[0,1,0,2,2,2,'LFrFRfrFRf2l'],
		[0,1,1,0,0,0,'URUruLrFRfl'],
		[0,1,1,0,0,1,'UFRUruf'],
		[0,1,1,0,0,2,'URUrurFRf'],
		[0,1,1,0,1,0,'uRUrubrFRfB'],
		[0,1,1,0,1,1,'ULFlRUruLfl'],
		[0,1,1,0,1,2,'ULfluLUFul'],
		[0,1,1,0,2,0,'rurFRfUR'],
		[0,1,1,0,2,1,'uLfluLUFul'],
		[0,1,1,0,2,2,'uFURur2fRURur'],
		[0,1,1,1,0,0,'urFRUrufUR'],
		[0,1,1,1,0,1,'URUrubrFRfB'],
		[0,1,1,1,0,2,'urfRluLUrFR'],
		[0,1,1,1,1,0,'uFRUruf'],
		[0,1,1,1,1,1,'ULFlURurURurLfl'],
		[0,1,1,1,1,2,'uBULulULulb'],
		[0,1,1,1,2,0,'UrfRluLUrFR'],
		[0,1,1,1,2,1,'ruRurUfUFR'],
		[0,1,1,1,2,2,'UFURur2fRURur'],
		[0,1,1,2,0,0,'UrFRUrufUR'],
		[0,1,1,2,0,1,'UrFRUrfRFuf'],
		[0,1,1,2,0,2,'u2rurFRfUR'],
		[0,1,1,2,1,0,'urFRUrfRFuf'],
		[0,1,1,2,1,1,'uLFlRUruLfl'],
		[0,1,1,2,1,2,'u2ruRurUfUFR'],
		[0,1,1,2,2,0,'uRUrurFRf'],
		[0,1,1,2,2,1,'UBULulULulb'],
		[0,1,1,2,2,2,'UrFURur2fr2UruR'],
		[1,0,0,0,0,0,'RUruLrFRfl'],
		[1,0,0,0,0,1,'ururFRfUR'],
		[1,0,0,0,0,2,'u2RUrubrFRfB'],
		[1,0,0,0,1,0,'u2RUrurFRf'],
		[1,0,0,0,1,1,'u2rFRUrfRFuf'],
		[1,0,0,0,1,2,'rFRUrufUR'],
		[1,0,0,0,2,0,'u2FRUruf'],
		[1,0,0,0,2,1,'u2rFRUrufUR'],
		[1,0,0,0,2,2,'rfRluLUrFR'],
		[1,0,0,1,0,0,'LfluLUFul'],
		[1,0,0,1,0,1,'RUrurFRf'],
		[1,0,0,1,0,2,'u2FURur2fRURur'],
		[1,0,0,1,1,0,'UrurFRfUR'],
		[1,0,0,1,1,1,'rFURur2fr2UruR'],
		[1,0,0,1,1,2,'UruRurUfUFR'],
		[1,0,0,1,2,0,'FURur2fRURur'],
		[1,0,0,1,2,1,'u2BULulULulb'],
		[1,0,0,1,2,2,'u2rfRluLUrFR'],
		[1,0,0,2,0,0,'u2LfluLUFul'],
		[1,0,0,2,0,1,'LFlRUruLfl'],
		[1,0,0,2,0,2,'FRUruf'],
		[1,0,0,2,1,0,'u2LFlRUruLfl'],
		[1,0,0,2,1,1,'rFRUrfRFuf'],
		[1,0,0,2,1,2,'BULulULulb'],
		[1,0,0,2,2,0,'RUrubrFRfB'],
		[1,0,0,2,2,1,'uruRurUfUFR'],
		[1,0,0,2,2,2,'LFlURurURurLfl'],
		[1,0,1,0,0,0,'ULFrflRURur'],
		[1,0,1,0,0,1,'ruRuru2RFRUruf'],
		[1,0,1,0,0,2,'u2Lf2rfRflru2RUrUR'],
		[1,0,1,0,1,0,'u2ruFURurfR'],
		[1,0,1,0,1,1,'lbRbrb2L'],
		[1,0,1,0,1,2,'URUrURururFRf'],
		[1,0,1,0,2,0,'burURB'],
		[1,0,1,0,2,1,'ruRurURURbrB'],
		[1,0,1,0,2,2,'ULFrFrDRdRf2l'],
		[1,0,1,1,0,0,'UFRuruRUrf'],
		[1,0,1,1,0,1,'ulb2RBrBLRu2ruRur'],
		[1,0,1,1,0,2,'RUrUrFRfRu2r'],
		[1,0,1,1,1,0,'uBULulb'],
		[1,0,1,1,1,1,'lb2RBrbRBrBL'],
		[1,0,1,1,1,2,'UrFr2br2fr2Br'],
		[1,0,1,1,2,0,'ulb2RBrBL'],
		[1,0,1,1,2,1,'Rbr2Fr2Br2fR'],
		[1,0,1,1,2,2,'ULFrFRf2l'],
		[1,0,1,2,0,0,'uRu2r2FRfRu2r'],
		[1,0,1,2,0,1,'URUrurFr2Uruf'],
		[1,0,1,2,0,2,'URUrURu2rFRUruf'],
		[1,0,1,2,1,0,'u2Lf2rfRfl'],
		[1,0,1,2,1,1,'uFRUrufUFRUruf'],
		[1,0,1,2,1,2,'u2fluLUluLUF'],
		[1,0,1,2,2,0,'uRUburURBr'],
		[1,0,1,2,2,1,'UFRUruRUruf'],
		[1,0,1,2,2,2,'u2LFrFRfrFRf2l'],
		[1,1,0,0,0,0,'u2LFrflRURur'],
		[1,1,0,0,0,1,'u2RUrURu2rFRUruf'],
		[1,1,0,0,0,2,'lb2RBrBLRu2ruRur'],
		[1,1,0,0,1,0,'uLf2rfRflru2RUrUR'],
		[1,1,0,0,1,1,'u2RUrurFr2Uruf'],
		[1,1,0,0,1,2,'u2FRuruRUrf'],
		[1,1,0,0,2,0,'UruRuru2RFRUruf'],
		[1,1,0,0,2,1,'Ru2r2FRfRu2r'],
		[1,1,0,0,2,2,'URUrUrFRfRu2r'],
		[1,1,0,1,0,0,'UruRurURURbrB'],
		[1,1,0,1,0,1,'RUburURBr'],
		[1,1,0,1,0,2,'u2LFrFRf2l'],
		[1,1,0,1,1,0,'UburURB'],
		[1,1,0,1,1,1,'uLFrFRfrFRf2l'],
		[1,1,0,1,1,2,'URbr2Fr2Br2fR'],
		[1,1,0,1,2,0,'u2LFrFrDRdRf2l'],
		[1,1,0,1,2,1,'u2FRUruRUruf'],
		[1,1,0,1,2,2,'lb2RBrBL'],
		[1,1,0,2,0,0,'u2RUrURururFRf'],
		[1,1,0,2,0,1,'FRUrufUFRUruf'],
		[1,1,0,2,0,2,'BULulb'],
		[1,1,0,2,1,0,'UlbRbrb2L'],
		[1,1,0,2,1,1,'uLf2rfRfl'],
		[1,1,0,2,1,2,'u2rFr2br2fr2Br'],
		[1,1,0,2,2,0,'uruFURurfR'],
		[1,1,0,2,2,1,'ufluLUluLUF'],
		[1,1,0,2,2,2,'Ulb2RBrbRBrBL'],
		[1,1,1,0,0,0,'lRBRBrbl2r2FRfl'],
		[1,1,1,0,0,1,'u2FRUrUfu2fLFl'],
		[1,1,1,0,0,2,'RlBRBrbrLrFRf'],
		[1,1,1,0,1,0,'URlBRBrbrLrFRf'],
		[1,1,1,0,1,1,'UBULulbUFRUruf'],
		[1,1,1,0,1,2,'RUrUrFRfu2rFRf'],
		[1,1,1,0,2,0,'uFRUrUfu2fLFl'],
		[1,1,1,0,2,1,'u2RUrUrFRfu2rFRf'],
		[1,1,1,0,2,2,'u2BULulbuFRUruf'],
		[1,1,1,1,0,0,'uRUrUrFRfu2rFRf'],
		[1,1,1,1,0,1,'uRlBRBrbrLrFRf'],
		[1,1,1,1,0,2,'UBULulbuFRUruf'],
		[1,1,1,1,1,0,'FRUrUfu2fLFl'],
		[1,1,1,1,1,1,'URu2r2FRfu2rFRf'],
		[1,1,1,1,1,2,'uFRUrufBULulb'],
		[1,1,1,1,2,0,'uBULulbuFRUruf'],
		[1,1,1,1,2,1,'u2FRUrufBULulb'],
		[1,1,1,1,2,2,'BULulbuFRUruf'],
		[1,1,1,2,0,0,'URUrUrFRfu2rFRf'],
		[1,1,1,2,0,1,'BULulbUFRUruf'],
		[1,1,1,2,0,2,'UFRUrUfu2fLFl'],
		[1,1,1,2,1,0,'u2BULulbUFRUruf'],
		[1,1,1,2,1,1,'uBULulbUFRUruf'],
		[1,1,1,2,1,2,'FRUrufBULulb'],
		[1,1,1,2,2,0,'u2RlBRBrbrLrFRf'],
		[1,1,1,2,2,1,'UFRUrufBULulb'],
		[1,1,1,2,2,2,'Ru2r2FRfu2rFRf']
	]
	for i in o:
		if(state[20]==i[0] and state[21]==i[1] and state[22]==i[2] and state[32]==i[3] and state[33]==i[4] and state[34]==i[5]):
			cube.do(state,i[6])
			solve+='<BR />'
			solve+=i[6]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查hhh～'
	t=0

	#p
	p=[
		[1,2,3,1,2,''],
		[1,2,3,1,3,'RbRf2rBRf2r2'],
		[1,2,3,1,4,'r2f2rbRf2rBr'],
		[1,2,3,2,1,'FrfLFRflFRfLFrfl'],
		[1,2,3,2,3,'u2r2f2rbRf2rBru2'],
		[1,2,3,2,4,'Ur2f2rbRf2rBru'],
		[1,2,3,3,1,'u2RbRf2rBRf2r2u2'],
		[1,2,3,3,2,'uRbRf2rBRf2r2U'],
		[1,2,3,3,4,'UFrfLFRflFRfLFrflu'],
		[1,2,3,4,1,'URbRf2rBRf2r2u'],
		[1,2,3,4,2,'ur2f2rbRf2rBrU'],
		[1,2,3,4,3,'u2r2l2Dr2l2u2r2l2Dr2l2'],
		[1,2,4,1,2,'lUru2Lulu2LRu'],
		[1,2,4,1,3,'urUrubrb2ubUbRBRU'],
		[1,2,4,1,4,'RUrfRUrurFr2uru'],
		[1,2,4,2,1,'ru2Ru2rFRUrurfr2u'],
		[1,2,4,2,3,'u2r2dFuFUfDr2BubU'],
		[1,2,4,2,4,'uRuRURURurur2u2'],
		[1,2,4,3,1,'u2r2URUrururUrU'],
		[1,2,4,3,2,'uRu2ru2RbruRURBr2u2'],
		[1,2,4,3,4,'Ur2DbUbuBdr2fUF'],
		[1,2,4,4,1,'RUrf2dLulUlDf2U'],
		[1,2,4,4,2,'u2FRuruRUrfRUrurFRfu2'],
		[1,2,4,4,3,'uruRb2DlULuLdb2'],
		[1,3,2,1,2,'u2rURur2fuFURFrfr2U'],
		[1,3,2,1,3,'ULuRu2lUrLuRu2lUr'],
		[1,3,2,1,4,'RUrurFr2uruRUrf'],
		[1,3,2,2,1,'rURur2fuFURFrfr2u'],
		[1,3,2,2,3,'UrURur2fuFURFrfr2'],
		[1,3,2,2,4,'uruRuRURurURUr2ur'],
		[1,3,2,3,1,'ruRuRURurURUr2urU'],
		[1,3,2,3,2,'u2RUrurFr2uruRUrfu2'],
		[1,3,2,3,4,'URUrurFr2uruRUrfU'],
		[1,3,2,4,1,'urURur2fuFURFrfr2u2'],
		[1,3,2,4,2,'lUru2LulRUru2LuRU'],
		[1,3,2,4,3,'uRUrurFr2uruRUrfu'],
		[1,3,4,1,2,'r2URUrururUr'],
		[1,3,4,1,3,'UruRb2DlULuLdb2u'],
		[1,3,4,1,4,'u2RUrfRUrurFr2uru2'],
		[1,3,4,2,1,'UrUrubrb2ubUbRBR'],
		[1,3,4,2,3,'URu2ru2RbruRURBr2U'],
		[1,3,4,2,4,'u2ru2Ru2rFRUrurfr2u2'],
		[1,3,4,3,1,'ur2DbUbuBdr2fUFu'],
		[1,3,4,3,2,'r2dFuFUfDr2Bub'],
		[1,3,4,3,4,'FRuruRUrfRUrurFRfU'],
		[1,3,4,4,1,'u2RUrf2dLulUlDf2'],
		[1,3,4,4,2,'u2lUru2Lulu2LRu2'],
		[1,3,4,4,3,'URuRURURurur2U'],
		[1,4,2,1,2,'RuRURURurur2'],
		[1,4,2,1,3,'URUrfRUrurFr2urU'],
		[1,4,2,1,4,'u2r2DbUbuBdr2fUFu2'],
		[1,4,2,2,1,'rUrubrb2ubUbRBRu'],
		[1,4,2,2,3,'ruRb2DlULuLdb2u2'],
		[1,4,2,2,4,'ur2dFuFUfDr2Bubu'],
		[1,4,2,3,1,'Ru2ru2RbruRURBr2'],
		[1,4,2,3,2,'UlUru2Lulu2LRU'],
		[1,4,2,3,4,'uFRuruRUrfRUrurFRf'],
		[1,4,2,4,1,'Uru2Ru2rFRUrurfr2U'],
		[1,4,2,4,2,'URUrf2dLulUlDf2u'],
		[1,4,2,4,3,'ur2URUrururUru'],
		[1,4,3,1,2,'uRUrfRUrurFr2ur'],
		[1,4,3,1,3,'UFRuruRUrfRUrurFRfu'],
		[1,4,3,1,4,'uru2Ru2rFRUrurfr2'],
		[1,4,3,2,1,'u2Ru2ru2RbruRURBr2u'],
		[1,4,3,2,3,'u2ruRb2DlULuLdb2U'],
		[1,4,3,2,4,'u2RuRURURurur2u'],
		[1,4,3,3,1,'Ur2URUrururUru2'],
		[1,4,3,3,2,'ulUru2Lulu2LR'],
		[1,4,3,3,4,'Ur2dFuFUfDr2Bubu2'],
		[1,4,3,4,1,'r2DbUbuBdr2fUFU'],
		[1,4,3,4,2,'u2rUrubrb2ubUbRBRu2'],
		[1,4,3,4,3,'uRUrf2dLulUlDf2u2'],
		[2,1,3,1,2,'u2ru2Ru2rFRUrurfr2U'],
		[2,1,3,1,3,'UrUrubrb2ubUbRBRu'],
		[2,1,3,1,4,'URu2ru2RbruRURBr2'],
		[2,1,3,2,1,'u2lUru2Lulu2LRU'],
		[2,1,3,2,3,'u2RUrf2dLulUlDf2u'],
		[2,1,3,2,4,'URuRURURurur2'],
		[2,1,3,3,1,'r2URUrururUru'],
		[2,1,3,3,2,'u2RUrfRUrurFr2urU'],
		[2,1,3,3,4,'UruRb2DlULuLdb2u2'],
		[2,1,3,4,1,'r2dFuFUfDr2Bubu'],
		[2,1,3,4,2,'FRuruRUrfRUrurFRf'],
		[2,1,3,4,3,'ur2DbUbuBdr2fUFu2'],
		[2,1,4,1,2,'UruRuRURurURUr2urU'],
		[2,1,4,1,3,'rURur2fuFURFrfr2u2'],
		[2,1,4,1,4,'UrURur2fuFURFrfr2u'],
		[2,1,4,2,1,'lUru2LulRUru2LuR'],
		[2,1,4,2,3,'urURur2fuFURFrfr2U'],
		[2,1,4,2,4,'uRUrurFr2uruRUrfu2'],
		[2,1,4,3,1,'u2rURur2fuFURFrfr2'],
		[2,1,4,3,2,'RUrurFr2uruRUrfu'],
		[2,1,4,3,4,'u2LuRu2lUrLuRu2lUr'],
		[2,1,4,4,1,'u2RUrurFr2uruRUrfU'],
		[2,1,4,4,2,'URUrurFr2uruRUrf'],
		[2,1,4,4,3,'ruRuRURurURUr2ur'],
		[2,3,1,1,2,'u2RuRURURurur2u2'],
		[2,3,1,1,3,'u2Ru2ru2RbruRURBr2u2'],
		[2,3,1,1,4,'u2ruRb2DlULuLdb2'],
		[2,3,1,2,1,'u2rUrubrb2ubUbRBRU'],
		[2,3,1,2,3,'r2DbUbuBdr2fUF'],
		[2,3,1,2,4,'uRUrf2dLulUlDf2U'],
		[2,3,1,3,1,'uRUrfRUrurFr2uru'],
		[2,3,1,3,2,'uru2Ru2rFRUrurfr2u'],
		[2,3,1,3,4,'UFRuruRUrfRUrurFRfu2'],
		[2,3,1,4,1,'ulUru2Lulu2LRu'],
		[2,3,1,4,2,'Ur2dFuFUfDr2BubU'],
		[2,3,1,4,3,'Ur2URUrururUrU'],
		[2,3,4,1,2,'ur2dFuFUfDr2Bubu2'],
		[2,3,4,1,3,'rUrubrb2ubUbRBRu2'],
		[2,3,4,1,4,'ruRb2DlULuLdb2U'],
		[2,3,4,2,1,'URUrf2dLulUlDf2u2'],
		[2,3,4,2,3,'Uru2Ru2rFRUrurfr2'],
		[2,3,4,2,4,'ur2URUrururUru2'],
		[2,3,4,3,1,'RuRURURurur2u'],
		[2,3,4,3,2,'u2r2DbUbuBdr2fUFU'],
		[2,3,4,3,4,'URUrfRUrurFr2ur'],
		[2,3,4,4,1,'UlUru2Lulu2LR'],
		[2,3,4,4,2,'uFRuruRUrfRUrurFRfu'],
		[2,3,4,4,3,'Ru2ru2RbruRURBr2u'],
		[2,4,1,1,2,'Ur2f2rbRf2rBru2'],
		[2,4,1,1,3,'FrfLFRflFRfLFrflu'],
		[2,4,1,1,4,'u2r2f2rbRf2rBrU'],
		[2,4,1,2,1,'ur2f2rbRf2rBr'],
		[2,4,1,2,3,'URbRf2rBRf2r2u2'],
		[2,4,1,2,4,'Ur2l2Dr2l2u2r2l2Dr2l2'],
		[2,4,1,3,1,'u'],
		[2,4,1,3,2,'r2f2rbRf2rBru'],
		[2,4,1,3,4,'RbRf2rBRf2r2u'],
		[2,4,1,4,1,'uRbRf2rBRf2r2'],
		[2,4,1,4,2,'uFrfLFRflFRfLFrfl'],
		[2,4,1,4,3,'u2RbRf2rBRf2r2U'],
		[2,4,3,1,2,'uRuRURURurur2U'],
		[2,4,3,1,3,'ru2Ru2rFRUrurfr2u2'],
		[2,4,3,1,4,'u2r2dFuFUfDr2Bub'],
		[2,4,3,2,1,'u2FRuruRUrfRUrurFRfU'],
		[2,4,3,2,3,'RUrf2dLulUlDf2'],
		[2,4,3,2,4,'uruRb2DlULuLdb2u'],
		[2,4,3,3,1,'lUru2Lulu2LRu2'],
		[2,4,3,3,2,'RUrfRUrurFr2uru2'],
		[2,4,3,3,4,'urUrubrb2ubUbRBR'],
		[2,4,3,4,1,'uRu2ru2RbruRURBr2U'],
		[2,4,3,4,2,'Ur2DbUbuBdr2fUFu'],
		[2,4,3,4,3,'u2r2URUrururUr'],
		[3,1,2,1,2,'u2r2URUrururUru2'],
		[3,1,2,1,3,'Ur2DbUbuBdr2fUFU'],
		[3,1,2,1,4,'uRu2ru2RbruRURBr2u'],
		[3,1,2,2,1,'urUrubrb2ubUbRBRu2'],
		[3,1,2,2,3,'RUrfRUrurFr2ur'],
		[3,1,2,2,4,'lUru2Lulu2LR'],
		[3,1,2,3,1,'uruRb2DlULuLdb2U'],
		[3,1,2,3,2,'RUrf2dLulUlDf2u2'],
		[3,1,2,3,4,'u2FRuruRUrfRUrurFRfu'],
		[3,1,2,4,1,'u2r2dFuFUfDr2Bubu2'],
		[3,1,2,4,2,'ru2Ru2rFRUrurfr2'],
		[3,1,2,4,3,'uRuRURURurur2u'],
		[3,1,4,1,2,'u2RbRf2rBRf2r2u'],
		[3,1,4,1,3,'UFrfLFRflFRfLFrfl'],
		[3,1,4,1,4,'uRbRf2rBRf2r2u2'],
		[3,1,4,2,1,'RbRf2rBRf2r2U'],
		[3,1,4,2,3,'r2f2rbRf2rBrU'],
		[3,1,4,2,4,'U'],
		[3,1,4,3,1,'ur2l2Dr2l2u2r2l2Dr2l2'],
		[3,1,4,3,2,'URbRf2rBRf2r2'],
		[3,1,4,3,4,'ur2f2rbRf2rBru2'],
		[3,1,4,4,1,'u2r2f2rbRf2rBru'],
		[3,1,4,4,2,'FrfLFRflFRfLFrflU'],
		[3,1,4,4,3,'Ur2f2rbRf2rBr'],
		[3,2,1,1,2,'Ru2ru2RbruRURBr2U'],
		[3,2,1,1,3,'uFRuruRUrfRUrurFRfU'],
		[3,2,1,1,4,'UlUru2Lulu2LRu2'],
		[3,2,1,2,1,'URUrfRUrurFr2uru2'],
		[3,2,1,2,3,'u2r2DbUbuBdr2fUFu'],
		[3,2,1,2,4,'RuRURURurur2U'],
		[3,2,1,3,1,'ur2URUrururUr'],
		[3,2,1,3,2,'Uru2Ru2rFRUrurfr2u2'],
		[3,2,1,3,4,'URUrf2dLulUlDf2'],
		[3,2,1,4,1,'ruRb2DlULuLdb2u'],
		[3,2,1,4,2,'rUrubrb2ubUbRBR'],
		[3,2,1,4,3,'ur2dFuFUfDr2Bub'],
		[3,2,4,1,2,'Ur2URUrururUru'],
		[3,2,4,1,3,'Ur2dFuFUfDr2Bubu'],
		[3,2,4,1,4,'ulUru2Lulu2LRU'],
		[3,2,4,2,1,'UFRuruRUrfRUrurFRf'],
		[3,2,4,2,3,'uru2Ru2rFRUrurfr2U'],
		[3,2,4,2,4,'uRUrfRUrurFr2urU'],
		[3,2,4,3,1,'uRUrf2dLulUlDf2u'],
		[3,2,4,3,2,'r2DbUbuBdr2fUFu2'],
		[3,2,4,3,4,'u2rUrubrb2ubUbRBRu'],
		[3,2,4,4,1,'u2ruRb2DlULuLdb2u2'],
		[3,2,4,4,2,'u2Ru2ru2RbruRURBr2'],
		[3,2,4,4,3,'u2RuRURURurur2'],
		[3,4,1,1,2,'ruRuRURurURUr2uru2'],
		[3,4,1,1,3,'URUrurFr2uruRUrfu2'],
		[3,4,1,1,4,'u2RUrurFr2uruRUrfu'],
		[3,4,1,2,1,'LuRu2lUrLuRu2lUr'],
		[3,4,1,2,3,'RUrurFr2uruRUrfU'],
		[3,4,1,2,4,'u2rURur2fuFURFrfr2u2'],
		[3,4,1,3,1,'uRUrurFr2uruRUrf'],
		[3,4,1,3,2,'urURur2fuFURFrfr2u'],
		[3,4,1,3,4,'lUru2LulRUru2LuRu2'],
		[3,4,1,4,1,'UrURur2fuFURFrfr2U'],
		[3,4,1,4,2,'rURur2fuFURFrfr2'],
		[3,4,1,4,3,'UruRuRURurURUr2uru'],
		[3,4,2,1,2,'ur2DbUbuBdr2fUF'],
		[3,4,2,1,3,'FRuruRUrfRUrurFRfu2'],
		[3,4,2,1,4,'r2dFuFUfDr2BubU'],
		[3,4,2,2,1,'UruRb2DlULuLdb2'],
		[3,4,2,2,3,'u2RUrfRUrurFr2uru'],
		[3,4,2,2,4,'r2URUrururUrU'],
		[3,4,2,3,1,'URuRURURurur2u2'],
		[3,4,2,3,2,'u2RUrf2dLulUlDf2U'],
		[3,4,2,3,4,'u2lUru2Lulu2LRu'],
		[3,4,2,4,1,'URu2ru2RbruRURBr2u2'],
		[3,4,2,4,2,'UrUrubrb2ubUbRBRU'],
		[3,4,2,4,3,'u2ru2Ru2rFRUrurfr2u'],
		[4,1,2,1,2,'uRUrf2dLulUlDf2'],
		[4,1,2,1,3,'u2rUrubrb2ubUbRBR'],
		[4,1,2,1,4,'r2DbUbuBdr2fUFu'],
		[4,1,2,2,1,'Ur2dFuFUfDr2Bub'],
		[4,1,2,2,3,'ulUru2Lulu2LRu2'],
		[4,1,2,2,4,'Ur2URUrururUr'],
		[4,1,2,3,1,'u2RuRURURurur2U'],
		[4,1,2,3,2,'u2ruRb2DlULuLdb2u'],
		[4,1,2,3,4,'u2Ru2ru2RbruRURBr2U'],
		[4,1,2,4,1,'uru2Ru2rFRUrurfr2u2'],
		[4,1,2,4,2,'UFRuruRUrfRUrurFRfU'],
		[4,1,2,4,3,'uRUrfRUrurFr2uru2'],
		[4,1,3,1,2,'ur2URUrururUrU'],
		[4,1,3,1,3,'URUrf2dLulUlDf2U'],
		[4,1,3,1,4,'Uru2Ru2rFRUrurfr2u'],
		[4,1,3,2,1,'uFRuruRUrfRUrurFRfu2'],
		[4,1,3,2,3,'UlUru2Lulu2LRu'],
		[4,1,3,2,4,'Ru2ru2RbruRURBr2u2'],
		[4,1,3,3,1,'ur2dFuFUfDr2BubU'],
		[4,1,3,3,2,'ruRb2DlULuLdb2'],
		[4,1,3,3,4,'rUrubrb2ubUbRBRU'],
		[4,1,3,4,1,'u2r2DbUbuBdr2fUF'],
		[4,1,3,4,2,'URUrfRUrurFr2uru'],
		[4,1,3,4,3,'RuRURURurur2u2'],
		[4,2,1,1,2,'URuRURURurur2u'],
		[4,2,1,1,3,'u2lUru2Lulu2LR'],
		[4,2,1,1,4,'u2RUrf2dLulUlDf2u2'],
		[4,2,1,2,1,'FRuruRUrfRUrurFRfu'],
		[4,2,1,2,3,'r2dFuFUfDr2Bubu2'],
		[4,2,1,2,4,'ur2DbUbuBdr2fUFU'],
		[4,2,1,3,1,'u2ru2Ru2rFRUrurfr2'],
		[4,2,1,3,2,'URu2ru2RbruRURBr2u'],
		[4,2,1,3,4,'UrUrubrb2ubUbRBRu2'],
		[4,2,1,4,1,'u2RUrfRUrurFr2ur'],
		[4,2,1,4,2,'UruRb2DlULuLdb2U'],
		[4,2,1,4,3,'r2URUrururUru2'],
		[4,2,3,1,2,'uRUrurFr2uruRUrfU'],
		[4,2,3,1,3,'lUru2LulRUru2LuRu'],
		[4,2,3,1,4,'urURur2fuFURFrfr2'],
		[4,2,3,2,1,'URUrurFr2uruRUrfu'],
		[4,2,3,2,3,'u2RUrurFr2uruRUrf'],
		[4,2,3,2,4,'ruRuRURurURUr2uru'],
		[4,2,3,3,1,'UruRuRURurURUr2ur'],
		[4,2,3,3,2,'UrURur2fuFURFrfr2u2'],
		[4,2,3,3,4,'rURur2fuFURFrfr2U'],
		[4,2,3,4,1,'RUrurFr2uruRUrfu2'],
		[4,2,3,4,2,'uLuRu2lUrLuRu2lUr'],
		[4,2,3,4,3,'u2rURur2fuFURFrfr2u'],
		[4,3,1,1,2,'uruRb2DlULuLdb2u2'],
		[4,3,1,1,3,'u2FRuruRUrfRUrurFRf'],
		[4,3,1,1,4,'RUrf2dLulUlDf2u'],
		[4,3,1,2,1,'Ur2DbUbuBdr2fUFu2'],
		[4,3,1,2,3,'uRu2ru2RbruRURBr2'],
		[4,3,1,2,4,'u2r2URUrururUru'],
		[4,3,1,3,1,'uRuRURURurur2'],
		[4,3,1,3,2,'u2r2dFuFUfDr2Bubu'],
		[4,3,1,3,4,'ru2Ru2rFRUrurfr2U'],
		[4,3,1,4,1,'RUrfRUrurFr2urU'],
		[4,3,1,4,2,'urUrubrb2ubUbRBRu'],
		[4,3,1,4,3,'lUru2Lulu2LRU'],
		[4,3,2,1,2,'r2l2Dr2l2u2r2l2Dr2l2'],
		[4,3,2,1,3,'ur2f2rbRf2rBru'],
		[4,3,2,1,4,'URbRf2rBRf2r2U'],
		[4,3,2,2,1,'UFrfLFRflFRfLFrflU'],
		[4,3,2,2,3,'uRbRf2rBRf2r2u'],
		[4,3,2,2,4,'u2RbRf2rBRf2r2'],
		[4,3,2,3,1,'Ur2f2rbRf2rBrU'],
		[4,3,2,3,2,'u2r2f2rbRf2rBr'],
		[4,3,2,3,4,'u2FrfLFRflFRfLFrfl'],
		[4,3,2,4,1,'r2f2rbRf2rBru2'],
		[4,3,2,4,2,'RbRf2rBRf2r2u2'],
		[4,3,2,4,3,'u2']
	]
	for i in p:
		if(state[0]==i[0] and state[1]==i[1] and state[2]==i[2] and state[12]==i[3] and state[13]==i[4]):
			cube.do(state,i[5])
			solve+='<BR />'
			solve+=i[5]
			t=1
			break
	if(t==0):
		return '输入错误，请认真检查hhh～'

	listo=['f','b','u','d','l','r']
	solveconvert=[i for i in solve]
	ls=len(solveconvert)
	for i in range(0,ls-1):
		if(solveconvert[i] in listo):
			if(solveconvert[i+1])=='2':
				solveconvert[i]=uppercase(solveconvert[i])
			else:
				solveconvert[i]=uppercase(solveconvert[i])+'\''
#	if(solveconvert[ls-1] in listo):
#		solveconvert[ls-1]=uppercase(solveconvert[ls-1])
	if(solveconvert[ls-1] in listo):
		solveconvert[ls-1]=uppercase(solveconvert[ls-1])+'\''
	solve=''
	for i in solveconvert:
		solve+=i
	return solve
